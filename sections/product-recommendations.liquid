<link rel="stylesheet" href="{{ 'section-product-recommendations.css' | asset_url }}" media="print" onload="this.media='all'">
<noscript>{{ 'section-product-recommendations.css' | asset_url | stylesheet_tag }}</noscript>


{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-product-grid.css' | asset_url | stylesheet_tag }}
{{ 'component-rating.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}

<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

<product-recommendations class="product-recommendations" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4">
        {% if recommendations.performed and recommendations.products_count > 0 %}
            <h2 class="heading text-center"><span>{{ section.settings.heading | escape }}</span></h2>
            <div class="row rless">
                {% for recommendation in recommendations.products %}
                    <div class="grid__item col-6 col-sm-4 col-md-6 col-lg-4 col-xl-3 cless">
                        {% render 'product-card',
                        product_card_product: recommendation,
                        media_size: section.settings.image_ratio,
                        show_rating: section.settings.show_rating,
                        picker_type: section.settings.picker_type,
                        show_variants: section.settings.show_variants,
                        show_colorswatch: section.settings.show_colorswatch,
                        display_product_type: section.settings.display_product_type %}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
</product-recommendations>

{% javascript %}
  class ProductRecommendations extends HTMLElement {
    constructor() {
      super();

      const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(this);

        fetch(this.dataset.url)
          .then(response => response.text())
          .then(text => {
            const html = document.createElement('div');
            html.innerHTML = text;
            const recommendations = html.querySelector('product-recommendations');
            if (recommendations && recommendations.innerHTML.trim().length) {
              this.innerHTML = recommendations.innerHTML;
            }
          })
          .catch(e => {
            console.error(e);
          });
      }

      new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
    }
  }

  customElements.define('product-recommendations', ProductRecommendations);
{% endjavascript %}

{% schema %}
{
  "name": "t:sections.product-recommendations.name",
  "tag": "section",
  "class": "spaced-section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.product-recommendations.settings.paragraph__1.content"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.product-recommendations.settings.heading.label"
    },
    {
      "type": "header",
      "content": "t:sections.product-recommendations.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.featured-collection.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.featured-collection.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.featured-collection.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.featured-collection.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.product-recommendations.settings.show_rating.label",
      "info": "t:sections.product-recommendations.settings.show_rating.info"
    },
    {
        "type": "checkbox",
        "id": "display_product_type",
        "label": "Display Product Type?",
        "default": true
    },
    {
      "type": "header",
      "content": "Variants"
    },    
    {
      "type": "checkbox",
      "id": "show_variants",
      "default": true,
      "label": "Show color/size variants"
    },
    {
      "type": "select",
      "id": "picker_type",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
        },
        {
          "value": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
        }
      ],
      "default": "button",
      "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
    },
    {
        "type": "checkbox",
        "id": "show_colorswatch",
        "default": true,
        "label": "Enable color swatches",
        "info": "Type set to be 'Pills'. [Learn how to setup swatches](https://www.webibazaar.com/shopify/viola-doc/home#colorswatch)"
    }
  ]
}
{% endschema %}
