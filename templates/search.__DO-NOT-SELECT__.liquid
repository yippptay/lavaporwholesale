{% comment %} 
  This file must output valid JSON for Crisp.Search to work
  This can be checked by visiting:
  https://<domain>.myshopify.com/search?q=<query>&view=__DO-NOT-SELECT__
  and ensuring the generated JSON is valid

  NOTE: The prefix '__DO-NOT-SELECT__' was chosen for the frontend:
    - '_' will be last in the templates dropdown
    - the name makes it clear what not to do
{% endcomment %}

{% comment %} 
  Crisp.SearchableCollection:
    - The only type will be 'product'
    - Requires the 'tags' property (see below)
    - Likely makes sense to have identical search & collection payloads
{% endcomment %}

{% comment %} DO NOT SKIP ITEMS VIA LIQUID. THE PAYLOAD LENGTH MUST BE 24 (except the final page) {% endcomment %}

{% layout none %}

{% comment %} As of 4.0.0+ Crisp REQUIRES a pagination of 24 {% endcomment %}
{% paginate search.results by 24 %}

{% capture results %}
  {% for item in search.results %}
    {% comment %}
      Adding large fields like 'product.body' will slow down Crisp.Search
      loading time fairly drastically. Only include what you absolutely need
      and use multiple templates if different data is needed in different locations
      TIP: The '| json' filter in liquid is your friend 
    {% endcomment %}
    {
      {% if item.object_type == 'article' %}
        "id": {{ item.id | json }},
        "title": {{ item.title | escape | json }}
      {% elsif item.object_type == 'page' %}
        "id": {{ item.id | json }},
        "title": {{ item.title | escape | json }}
      {% else %}
        "id": {{ item.id | json }},
        "title": {{ item.title | escape | json }},
        "url": {{ item.url | json }},
        "image": {{ item.featured_image.src | json }},
        {% comment %} This is required in products to enable SearchableCollection {% endcomment %}
        "tags": [
          {% for t in product.tags %}
            {{ t | handle | json }}{% unless forloop.last %},{% endunless %}
          {% endfor %}
        ]
      {% endif %}
    }
    {% unless forloop.last %},{% endunless %}
  {% endfor %}
{% endcapture %}

{% comment %} 
  These 'headers' are required for Crisp.Search to function.
  Do not print any other characters to the document
{% endcomment %}
{
  "total": {{ search.results_count }},
  "pages": {{ paginate.pages }},
  "page": {{ paginate.current_page }},
  "size": {{ paginate.page_size }},
  {% comment %}
    Payload expects an array of arbitrary data. Generally an array of objects makes sense
    TIP: Don't forget to strip trailing commas!
  {% endcomment %}
  "payload": [{{ results }}]
}
{% endpaginate %}